<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Performance on Notes of wgundamj44</title>
    <link>http://wgundamj44.github.io/tags/performance/</link>
    <description>Recent content in Performance on Notes of wgundamj44</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://wgundamj44.github.io/tags/performance/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>An analysis of GvG event</title>
      <link>http://wgundamj44.github.io/post/2014-11-12-gvg-status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wgundamj44.github.io/post/2014-11-12-gvg-status/</guid>
      <description>

&lt;h2 id=&#34;summary-of-gvg-event:afe463e62ffac07f8589ee0e884ac16f&#34;&gt;Summary of GvG event&lt;/h2&gt;

&lt;p&gt;A kind of Guild VS Guild event.&lt;/p&gt;

&lt;p&gt;Last period 2014-10-09 ~ 2014-10-16. 12:00:00 ~ 12:59:59, 22:00:00 ~ 22:59:59 twice everyday.&lt;/p&gt;

&lt;p&gt;Average access user is about 4000. Access is concentrated in one hour, so the load was heavy.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;re 4 web servers to handle the access, DB is one master, one slave.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s a serious bug in the initial versions so the load average is crazily high. In about 10-12, we fixed the bugs so
the performace after 10-12 is more reiable.&lt;/p&gt;

&lt;h2 id=&#34;the-bug:afe463e62ffac07f8589ee0e884ac16f&#34;&gt;The bug&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;SELECT last_insert_id()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;VS&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;SELECT last_insert_id() FROM xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The former will return the id of last inserted record, while the latter will return last inserted id for EVERY RECORD in the table, which
blowed up our application.&lt;/p&gt;

&lt;h2 id=&#34;before:afe463e62ffac07f8589ee0e884ac16f&#34;&gt;Before&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;number of access per sec:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://wgundamj44.github.io/2014-11-12-access1.png&#34; alt=&#34;number of access&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;response time:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://wgundamj44.github.io/2014-11-12-time1.png&#34; alt=&#34;response time&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cpu load average:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://wgundamj44.github.io/2014-11-12-load1.png&#34; alt=&#34;load average&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Response slows as requests increase. Also we can see that, because of the slow query the cpu load reaches as high as 5 at peak time.&lt;/p&gt;

&lt;h2 id=&#34;after-fix:afe463e62ffac07f8589ee0e884ac16f&#34;&gt;After fix&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;number of access per sec:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://wgundamj44.github.io/2014-11-12-access2.png&#34; alt=&#34;number of access&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;response time:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://wgundamj44.github.io/2014-11-12-time2.png&#34; alt=&#34;response time&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cpu load average:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://wgundamj44.github.io/2014-11-12-load2.png&#34; alt=&#34;load average&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After the bug is fixed, the load average returns to a reasonable level.&lt;/p&gt;

&lt;h2 id=&#34;some-addtional-figures:afe463e62ffac07f8589ee0e884ac16f&#34;&gt;Some Addtional Figures&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;QPS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At peak time, the master has qps of about 3k, among the operations, select operation consists 60% which is about 2k qps, while
update and insert is 300 and 500 respectively.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Response Time&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;0 ~ 100ms is mostly access time of static files. 100 ~ 200ms is considered as &amp;ldquo;Good&amp;rdquo; response time. When response time reaches 200ms or more, the request should be especially pay attention to, because they will surely kill the game if come to frequently.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>