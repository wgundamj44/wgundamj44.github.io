<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vagrant on Notes of wgundamj44</title>
    <link>http://wgundamj44.github.io/tags/vagrant/</link>
    <description>Recent content in Vagrant on Notes of wgundamj44</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://wgundamj44.github.io/tags/vagrant/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Development Enviroment with Vagrant</title>
      <link>http://wgundamj44.github.io/post/2014-09-27-dev-with-vagrant/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wgundamj44.github.io/post/2014-09-27-dev-with-vagrant/</guid>
      <description>

&lt;h1 id=&#34;goal:ac1b67bb1caef5475448797abf87331d&#34;&gt;Goal&lt;/h1&gt;

&lt;p&gt;Migerate my development enrioment to vagrant managed virtual box.&lt;/p&gt;

&lt;h1 id=&#34;vagrant:ac1b67bb1caef5475448797abf87331d&#34;&gt;vagrant&lt;/h1&gt;

&lt;h2 id=&#34;nfs:ac1b67bb1caef5475448797abf87331d&#34;&gt;nfs&lt;/h2&gt;

&lt;p&gt;It is said that common shared folder will be very slow. I decided to use NFS although I didn&amp;rsquo;t measure the difference myself&amp;hellip;&lt;/p&gt;

&lt;p&gt;I followed the instructions &lt;a href=&#34;https://docs.vagrantup.com/v2/synced-folders/nfs.html&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Put it simply, we need to do two things: set private networks, set share folder as nfs. Configure file is as belows:
{% highlight ruby %}&lt;/p&gt;

&lt;h1 id=&#34;set-network-as-dhcp:ac1b67bb1caef5475448797abf87331d&#34;&gt;set network as dhcp&lt;/h1&gt;

&lt;p&gt;config.vm.network &amp;ldquo;private_network&amp;rdquo;, type: &amp;ldquo;dhcp&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;set-shared-folder-and-make-type-nfs:ac1b67bb1caef5475448797abf87331d&#34;&gt;set shared folder, and make type nfs&lt;/h1&gt;

&lt;p&gt;config.vm.synced_folder &amp;ldquo;../Develop/&amp;rdquo;, &amp;ldquo;/develop&amp;rdquo;, type: &amp;ldquo;nfs&amp;rdquo;
{% endhighlight %}
The bad thing is that, after nfs is set, we will be prompted with password everytime. Vagrant document gives the way to avoid this.&lt;/p&gt;

&lt;h2 id=&#34;port-forwarding:ac1b67bb1caef5475448797abf87331d&#34;&gt;port forwarding&lt;/h2&gt;

&lt;p&gt;{% highlight ruby %}
config.vm.network &amp;ldquo;forwarded_port&amp;rdquo;, guest: 8080, host: 1234
config.vm.network &amp;ldquo;forwarded_port&amp;rdquo;, guest: 8081, host: 1235
{% endhighlight %}
The good part of vagrant is that, when port conficts it will explictly complains which is far better than virutal box.&lt;/p&gt;

&lt;h2 id=&#34;provisioning:ac1b67bb1caef5475448797abf87331d&#34;&gt;provisioning&lt;/h2&gt;

&lt;p&gt;Have&amp;rsquo;t investigate this yet..&lt;/p&gt;

&lt;h1 id=&#34;struggle-for-install:ac1b67bb1caef5475448797abf87331d&#34;&gt;struggle for install&lt;/h1&gt;

&lt;h2 id=&#34;install-recent-repository:ac1b67bb1caef5475448797abf87331d&#34;&gt;install recent repository&lt;/h2&gt;

&lt;p&gt;use this command:
    rpm -Uvh &lt;a href=&#34;http://mirror.webtatic.com/yum/el6/latest.rpm&#34;&gt;http://mirror.webtatic.com/yum/el6/latest.rpm&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;update-php-version-from-5-3-to-5-4:ac1b67bb1caef5475448797abf87331d&#34;&gt;update php version from 5.3 to 5.4&lt;/h2&gt;

&lt;p&gt;somehow the default php version in CentOS6 is 5.3, which doesn&amp;rsquo;t accomendate my project. So I need to update php version with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install yum-plugin-replace
yum replace php-common --replace-with=php54w-common
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As a result, this step brings lots of unexpected problems.&lt;/p&gt;

&lt;h2 id=&#34;install-gcc-apache-mysql:ac1b67bb1caef5475448797abf87331d&#34;&gt;install gcc, apache, mysql&lt;/h2&gt;

&lt;h2 id=&#34;install-redis-and-memcached:ac1b67bb1caef5475448797abf87331d&#34;&gt;install redis and memcached&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;yum install redis memcached
yum install php54w-memcache (not php-memcache!)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;when I tried to install php54w-redis, I found out that there was no such package. So I had to install it from source code phpredis&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;start-my-project:ac1b67bb1caef5475448797abf87331d&#34;&gt;start my project&lt;/h2&gt;

&lt;p&gt;I encountered following problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;white page: My project is based on CodeIgniter. The werid part of the framework is that, its hides all the error message when doing mysql connect with @.
As a result, it took me lots of time to find out that reason is simply mysql server didn&amp;rsquo;t started.&lt;/li&gt;
&lt;li&gt;no error log: it turns out the apache didn&amp;rsquo;t have the write permission to the log folder&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>